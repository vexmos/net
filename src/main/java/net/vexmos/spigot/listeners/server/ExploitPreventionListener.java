package net.vexmos.spigot.listeners.server;

import net.vexmos.spigot.VexmosNET;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.HashMap;
import java.util.Map;

public class ExploitPreventionListener implements Listener {

    private final Map<String, Long> joinTimes = new HashMap<>();
    private final Map<String, Integer> commandSpamCounter = new HashMap<>();
    private final Map<String, Long> lastCommandTime = new HashMap<>();

    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        joinTimes.put(event.getPlayer().getName(), java.lang.System.currentTimeMillis());
    }

    @EventHandler
    public void onPlayerQuit(PlayerQuitEvent event) {
        joinTimes.remove(event.getPlayer().getName());
        commandSpamCounter.remove(event.getPlayer().getName());
        lastCommandTime.remove(event.getPlayer().getName());
    }

    @EventHandler
    public void onPlayerCommandPreprocess(PlayerCommandPreprocessEvent event) {
        String playerName = event.getPlayer().getName();
        long currentTime = java.lang.System.currentTimeMillis();

        // Prevenir spam de comandos imediatamente após entrar
        if (joinTimes.containsKey(playerName)) {
            long joinTime = joinTimes.get(playerName);
            if (currentTime - joinTime < 3000) { // 3 segundos
                event.setCancelled(true);
                event.getPlayer().sendMessage("§cAguarde uns instantes para executar o comando.");
                VexmosNET.get().getLogger().warning("Comando bloqueado de " + playerName + " devido a possível exploit.");
                return;
            }
        }

        // Reseta o contador se o último comando foi há mais de 1 segundo
        if (lastCommandTime.containsKey(playerName) && (currentTime - lastCommandTime.get(playerName)) > 1000) {
            commandSpamCounter.put(playerName, 0);
        }

        // Prevenção de spam de comandos
        commandSpamCounter.put(playerName, commandSpamCounter.getOrDefault(playerName, 0) + 1);
        lastCommandTime.put(playerName, currentTime);

        if (commandSpamCounter.get(playerName) > 10) {
            event.setCancelled(true);
            event.getPlayer().sendMessage("Você está enviando comandos muito rapidamente.");
            VexmosNET.get().getLogger().warning("Spam de comandos bloqueado de " + playerName);
        }

        // Limpa o contador após um período de tempo
        new BukkitRunnable() {
            @Override
            public void run() {
                commandSpamCounter.remove(playerName);
                lastCommandTime.remove(playerName);
            }
        }.runTaskLater(VexmosNET.get(), 200L); // Reseta após 10 segundos
    }
}
